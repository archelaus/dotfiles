let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
    silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
    \| PlugInstall --sync | source $MYVIMRC
\| endif

set nocompatible            " disable compatibility to old-time vi
set showmatch               " show matching brackets.
set ignorecase              " case insensitive matching
set mouse=v                 " middle-click paste with mouse
set autoindent              " indent a new line the same amount as the line just typed
set number                  " add line numbers
set wildmode=longest,list   " get bash-like tab completions
filetype plugin indent on   " allows auto-indenting depending on file type
set tabstop=4               " number of columns occupied by a tab character
set expandtab               " converts tabs to white space
set shiftwidth=4            " width for autoindents
set softtabstop=4           " see multiple spaces as tabstops so <BS> does the right thing

syntax on 
set modelines=0
set clipboard=unnamedplus

" https://stackoverflow.com/a/15317146
" set backupdir=~/.vim/backup//
" set directory=~/.vim/swap//
" set undodir=~/.vim/undo//

" https://stevelosh.com/blog/2010/09/coming-home-to-vim/
set encoding=utf-8
" set scrolloff=3
set smartindent
set showmode "show which mode currently on 
set showcmd "show command running bottom right
set hidden
set wildmenu
set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set relativenumber
set undofile
let mapleader = ","
" nnoremap <tab> %
" vnoremap <tab> %
au FocusLost * :wa
inoremap jj <ESC>
nnoremap / /\v
vnoremap / /\v
set gdefault
set incsearch
nnoremap <leader><space> :noh<cr>
set wrap
nnoremap <leader>w <C-w>v<C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>
nnoremap ; :
au FocusLost * :wa
inoremap jj <Esc>

" fast saving
" nmap <leader>w :w!<cr>

" map space to search
map <space> /
map <C-space> ?

" Useful mappings for managing tabs 
map <leader>tn :tabnew<cr> 
map <leader>to :tabonly<cr> 
map <leader>tc :tabclose<cr> 
map <leader>tm :tabmove<cr>    
map <leader>t :tabnext<cr> 
map <leader>te :tabedit <C-r>=expand("%:p:h")<cr>/

call plug#begin('~/.vim/plugged')
Plug 'itchyny/lightline.vim'
Plug 'tmsvg/pear-tree'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'mbbill/undotree'
Plug 'christoomey/vim-system-copy'
Plug 'dense-analysis/ale'
call plug#end()

" https://www.youtube.com/watch?v=DogKdiRx7ls
set nohlsearch
set noswapfile
set nobackup
set undodir=~/.vim/undo//
set undofile
set scrolloff=8
set signcolumn=yes

nnoremap <F5> :UndotreeToggle<CR>

" auto set paste on copy from system
let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
    set pastetoggle=<Esc>[201~
    set paste
    return ""
endfunction

" https://vi.stackexchange.com/a/479
cnoremap w!! w !sudo tee %
