#!/usr/bin/env bash

# Script name: dm-handler
# Description: Link handler based on dmenu
# Dependencies: dmenu, mpv, nsxiv, setroot, tsp, vim, yt-dlp, zathura

set -euo pipefail

_path="$(cd "$(dirname "$BASH_SOURCE")" && cd "$(dirname "$(readlink "$BASH_SOURCE" || echo ".")")" && pwd)"
if [[  -f "${_path}/_dm-helper" ]]; then
  source "${_path}/_dm-helper"
else
  echo "No helper-script found"
fi

source "$(get_config)"

clipboard="$(xclip -o -selection clipboard)" || continue
choice=$(printf "%s\n%s\n%s" "$clipboard" "Yes" "No" | $DMENU "Proceed with?")

if [[ $choice = "No" ]]; then
  feed="$(printf "%s" | $DMENU "Paste URL or file path")"
else
  feed="$clipboard"
fi

menu() {
  printf "auto\n"
  printf "upload\n"
  printf "nsxiv\n"
  printf "setbg\n"
  printf "PDF\n"
  printf "web\n"
  printf "brave\n"
  printf "lynx\n"
  printf "vim\n"
  printf "mpv\n"
  printf "mpv loop\n"
  printf "mpv float\n"
  printf "queue download\n"
  printf "queue yt-dlp\n"
  printf "queue yt-dlp audio"
}

set -x
case $(menu | sort | $DMENU "Open it with?") in
  auto)
    case "$feed" in
      *mkv|*webm|*mp4|*youtube.com/watch*|*youtube.com/playlist*|*youtube.com/shorts*|*youtu.be*)
        setsid -f mpv -quiet "$feed" >/dev/null 2>&1
        ;;
      *png|*jpg|*jpe|*jpeg|*gif)
        curl -sL "$feed" > "/tmp/$(echo "$feed" | sed "s/.*\///;s/%20/ /g")" &&
          nsxiv -a "/tmp/$(echo "$feed" | sed "s/.*\///;s/%20/ /g")"  >/dev/null 2>&1 &
        ;;
      *pdf|*cbz|*cbr)
        curl -sL "$feed" > "/tmp/$(echo "$feed" | sed "s/.*\///;s/%20/ /g")" &&
          zathura "/tmp/$(echo "$feed" | sed "s/.*\///;s/%20/ /g")"  >/dev/null 2>&1 &
        ;;
      *mp3|*flac|*opus|*mp3?source*)
        qndl "$feed" 'curl -LO' >/dev/null 2>&1
        ;;
      *)
        [[ -f $feed ]] &&
          setsid -f $DMEDITOR "$feed" >/dev/null 2>&1 || setsid -f $DMBROWSER "$feed" >/dev/null 2>&1
    esac
    ;;
	mpv)
    setsid -f mpv -quiet "$feed" >/dev/null 2>&1
    ;;
	"mpv loop")
    setsid -f mpv -quiet --loop "$feed" >/dev/null 2>&1
    ;;
	"mpv float")
    setsid -f mpv --geometry=50%:50% --autofit=40% --x11-name="mpvfloat" "$feed" >/dev/null 2>&1
    ;;
	"queue yt-dlp")
    qndl "$feed" >/dev/null 2>&1
    ;;
	"queue yt-dlp audio")
    qndl "$feed" 'yt-dlp -x --no-write-auto-subs --no-write-subs'
    ;;
	"queue download")
    qndl "$feed" 'curl -LO' >/dev/null 2>&1
    # qndl "$feed" 'aria2c -i -c -x 16 -j 4' >/dev/null 2>&1
    ;;
	PDF)
    curl -sL "$feed" > "/tmp/$(echo "$feed" | sed "s|.*/||;s/%20/ /g")" &&
      zathura "/tmp/$(echo "$feed" | sed "s|.*/||;s/%20/ /g")"  >/dev/null 2>&1
    ;;
	nsxiv)
    curl -sL "$feed" > "/tmp/$(echo "$feed" | sed "s|.*/||;s/%20/ /g")" &&
      nsxiv -a "/tmp/$(echo "$feed" | sed "s|.*/||;s/%20/ /g")"  >/dev/null 2>&1
    ;;
	vim)
    curl -sL "$feed" > "/tmp/$(echo "$feed" | sed "s|.*/||;s/%20/ /g")" &&
      setsid -f  $DMEDITOR "/tmp/$(echo "$feed" | sed "s|.*/||;s/%20/ /g")"  >/dev/null 2>&1
    ;;
	setbg)
    curl -L "$feed" > $XDG_DATA_HOME/wallpaper &&
      setroot --restore 2>&1
    ;;
	web)
    setsid -f $DMBROWSER "$feed" >/dev/null 2>&1
    ;;
	brave)
    brave-launcher "$feed" >/dev/null 2>&1
    ;;
  upload)
    case $(printf "imgur\ncatbox\nupload.systems" | $DMENU "Choose site:") in
      imgur)
        imgurbash2 -l "$1" &&
          notify-send "imgurbash2" "Upload successful. Link copied to clipboard"
        ;;
      "upload.systems")
        rand=$(tr -cd 'a-f0-9' < /dev/urandom | head -c 7)
        tmpfile=/tmp/"${rand}.png"
        cp "$1" $tmpfile
        response="$(curl -X POST -F key=$UPLOAD_KEY -F "file=@$tmpfile" https://api.upload.systems/images/upload)"
        jq -r .url <<< "$response" | cp2cb; sleep 1
        echo "https://who-the-fuck-pinged.me/$(jq -r .image.emojiId <<< "$response")" | cp2cb
        notify-send "upload.systems" "Upload successful. Link copied to clipboard"
        ;;
      catbox)
        curl -sF "reqtype=fileupload" -F "fileToUpload=@$1" https://catbox.moe/user/api.php -w "\n" 2>&1 |
          tee >(cp2cb) >> ~/.local/share/catbox-history &&
        notify-send "catbox" "Upload successful. Link copied to clipboard"
        ;;
    esac
	# lynx)
    # lynx "$feed" >/dev/null 2>&1
    # ;;
esac
