#!/usr/bin/env bash

set -e

################### Variables ####################

CLEAR='\033[0m'
RED='\033[0;31m'
readarray -t remotes < <(rclone listremotes --config ~/.config/rclone/mounts.conf | tr -d ':')

#############################################

sudo systemctl daemon-reload
printf "Found ${#remotes[@]} remotes:\n"
printf "%s\n" "${remotes[@]}"

###################### Some Checks #####################

[ -f ~/.config/rclone/mounts.conf ] || {
	echo "Couldn't find mounts.conf"
	exit 1
}

[ -d ~/Mounts ] || {
	echo "Creating mount directory under ~"
	mkdir ~/Mounts
}

#############################################

######################## Custom Functions ################################

function usage() {
  if [ -n "$1" ]; then
    echo -e "\n${RED}ðŸ—¶ $1${CLEAR}\n";
  fi
  echo -e "Usage: $0"
  echo "  -d, --disable disable mounts"
  echo "  -e, --enable   enable mounts"
  echo "  -s, --stop       stop mounts"
  echo "  -r, --restart restart mounts"
  exit 1
}

function enable() {
	for i in "${remotes[@]}"
	do
		printf "\nEnabling service for => $i\n"
		sudo systemctl enable rclone-mount@"$i".service
		[ -d ~/Mounts/$i ] || mkdir ~/Mounts/$i
		sudo systemctl start rclone-mount@"$i".service && printf "Done\n"
	done
}

function disable(){
	for i in "${remotes[@]}"
	do
		printf "\nDisabling service for => $i\n"
		sudo systemctl disable rclone-mount@"$i".service
	done
}

function restart(){
	for i in "${remotes[@]}"
	do
		printf "\nRestarting service for => $i\n"
		sudo systemctl restart rclone-mount@"$i".service
	done
}

function stop(){
	for i in "${remotes[@]}"
	do
		printf "\nStopping service for => $i\n"
		sudo systemctl stop rclone-mount@"$i".service
	done
}

#############################################

case $1 in
  -d|--disable) disable ;;
  -e|--enable) enable ;;
  -r|--restart) restart ;;
  -s|--stop) stop ;;
  *) usage "Unknown parameter passed: $1" ;;
esac
